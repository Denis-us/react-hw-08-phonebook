{"version":3,"file":"static/js/609.ae9c2751.chunk.js","mappings":"oQACA,GAAgB,UAAY,6BAA6B,KAAO,wBAAwB,UAAY,6BAA6B,MAAQ,yBAAyB,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,2B,UCKtO,SAASA,IAAU,IAAD,IAE7B,GAAwDC,EAAAA,EAAAA,MAAjDC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAA2BC,EAA5C,EAA+BC,UAAaD,OACtCE,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,yCAAG,WAAMC,GAAN,+FAERH,EAASI,EAAAA,EAAAA,MAAqBD,IAFtB,sDAKhBE,QAAQC,IAAR,MALgB,wDAAH,sDASrB,OACI,iBAAKC,UAAWC,EAAAA,UAAhB,WACA,eAAID,UAAWC,EAAAA,OAAf,6CACA,kBAAMD,UAAWC,EAAAA,KAAQC,SAAUZ,EAAaK,GAAhD,WACI,gBAAKK,UAAWC,EAAAA,UAAhB,UACA,SAACE,EAAA,GAAD,QAAWC,GAAG,iBAAiBC,MAAM,iCAAQC,QAAQ,WAAWC,KAAK,QAAQP,UAAWC,EAAAA,WACpFZ,EAAS,QAAS,CAAEmB,UAAU,SAEjC,UAAAjB,EAAOkB,aAAP,eAAcF,QAAQ,cAAGP,UAAWC,EAAAA,MAAd,wFAEvB,gBAAKD,UAAWC,EAAAA,UAAhB,UACA,SAACE,EAAA,GAAD,QAAWC,GAAG,iBAAiBC,MAAM,uCAASC,QAAQ,WAAWC,KAAK,WAAWP,UAAWC,EAAAA,WACxFZ,EAAS,WAAY,CAAEmB,UAAU,SAEpC,UAAAjB,EAAOmB,gBAAP,eAAiBH,QAAQ,cAAGP,UAAWC,EAAAA,MAAd,8FAE1B,SAACU,EAAA,EAAD,CAAQL,QAAQ,YAAYC,KAAK,SAASP,UAAWC,EAAAA,OAArD","sources":["webpack://react-hw-08-phonebook/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginView_container__4TeJ3\",\"form\":\"LoginView_form__wacRj\",\"blockForm\":\"LoginView_blockForm__08DQY\",\"label\":\"LoginView_label__rlmoz\",\"textField\":\"LoginView_textField__zQ9QB\",\"error\":\"LoginView_error__h8CJU\",\"button\":\"LoginView_button__cNaCh\"};","import { useForm } from \"react-hook-form\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Button, TextField } from '@mui/material';\r\nimport authOperations from '../../redux/auth/authOperations'\r\nimport s from './LoginView.module.css'\r\n\r\nexport default function Login () {\r\n\r\n    const {register, handleSubmit, formState: { errors }} = useForm()\r\n    const dispatch = useDispatch()\r\n      \r\n    const handleLoginUser = async values => {\r\n          try {\r\n              await dispatch(authOperations.login(values))\r\n            }\r\n          catch (error) {\r\n            console.log(error)\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n        <h1 className={s.header}>Логин</h1>\r\n        <form className={s.form} onSubmit={handleSubmit(handleLoginUser)}>\r\n            <div className={s.blockForm}>\r\n            <TextField id=\"outlined-basic\" label=\"Почта\" variant=\"outlined\" type=\"email\" className={s.textField}\r\n            {...register(\"email\", { required: true })}/>\r\n            </div>\r\n            {errors.email?.type && <p className={s.error}>Введите почту</p>}\r\n\r\n            <div className={s.blockForm}>\r\n            <TextField id=\"outlined-basic\" label=\"Пароль\" variant=\"outlined\" type=\"password\" className={s.textField}\r\n            {...register(\"password\", { required: true })}/>\r\n            </div>\r\n            {errors.password?.type && <p className={s.error}>Введите пароль</p>}\r\n\r\n            <Button variant=\"contained\" type=\"submit\" className={s.button}>Отправить</Button>\r\n        </form>\r\n        </div>\r\n    )\r\n}"],"names":["Login","useForm","register","handleSubmit","errors","formState","dispatch","useDispatch","handleLoginUser","values","authOperations","console","log","className","s","onSubmit","TextField","id","label","variant","type","required","email","password","Button"],"sourceRoot":""}