{"version":3,"file":"static/js/813.6122aade.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.js","webpack://react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","redux/filter/filterSelectors.js","webpack://react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","webpack://react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.js","webpack://react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-hw-08-phonebook/./src/views/PhonebookView/PhonebookView.module.css?50e9","views/PhonebookView/PhonebookView.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__aYVXE\",\"blockForm\":\"Form_blockForm__AjGmB\",\"textField\":\"Form_textField__4PqGp\",\"error\":\"Form_error__UYCS1\",\"button\":\"Form_button__Hm6-k\"};","import { toast } from 'react-toastify'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, TextField } from '@mui/material'\r\nimport {getContacts} from '../../redux/contacts/contactsSelectors'\r\nimport contactsOperations from '../../redux/contacts/contactsOperations'\r\nimport s from \"./Form.module.css\"\r\n\r\n\r\nconst Form = () => {\r\n  const { register, formState: { errors }, handleSubmit, reset } = useForm();\r\n  const dispatch = useDispatch()\r\n  const contacts = useSelector(getContacts)\r\n  \r\n\r\n  const handleAddContact = async values => {\r\n    try {\r\n      if(contacts.find(contact => (contact.name === values.name))) {\r\n        return toast.error('Такой контакт уже есть')\r\n      } else {\r\n        await dispatch(contactsOperations.addContact(values))\r\n        reset()\r\n        toast.success('Контакт добавлен')\r\n      }\r\n    } catch (error) {\r\n      toast.error('Ошибка при добавлении контакта')\r\n    }\r\n  }\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit(handleAddContact)} className={s.form}>\r\n        <div className={s.blockForm}>\r\n        <TextField id=\"outlined-basic\" label=\"Имя\" variant=\"outlined\" type=\"text\" className={s.textField} {...register(\"name\", {\r\n          required: true,\r\n          pattern: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n        })}/>\r\n          </div>\r\n      {errors.name?.type === 'required' && <p className={s.error}>Имя может состоять только из букв, апострофа, тире и пробелов</p>}\r\n        \r\n\r\n        <div className={s.blockForm}>\r\n        <TextField id=\"outlined-basic\" label=\"Телефон\" variant=\"outlined\" type=\"tel\" className={s.textField} {...register(\"number\", {\r\n        required: true,\r\n        pattern: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/\r\n      })}/>\r\n        </div>\r\n      {errors.number?.type && <p className={s.error}>Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и может начинаться с +</p>}\r\n        \r\n      <Button variant=\"contained\" type=\"submit\" className={s.button}>Отправить</Button>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default Form\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__uf0gA\",\"title\":\"Section_title__Jg+AT\"};","import s from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","export const getFilter = state => state.filter.filter","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__HNcMN\",\"button\":\"Contact_button__gtcA0\",\"contactsData\":\"Contact_contactsData__8QCYG\"};","import { toast } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport s from './Contact.module.css'\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nconst Contact = ({id, name, number}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.contact}>\r\n          <div className={s.contactInfo}>\r\n            <p className={s.contactsData}>{name}</p>\r\n            <p className={s.contactsData}>{number}</p>\r\n          </div>\r\n           \r\n          <Button variant=\"contained\" type=\"submit\" className={s.button}\r\n                  onClick={() => {\r\n                  dispatch(contactsOperations.deleteContact(id))\r\n                  toast.success('Контакт удален')\r\n                }}>\r\n                Удалить\r\n              </Button>\r\n        </div>     \r\n    );\r\n  };\r\n  \r\n  export default Contact","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__g4YSo\",\"contactsElement\":\"ContactsList_contactsElement__227ed\",\"contact\":\"ContactsList_contact__bAaeb\",\"button\":\"ContactsList_button__2P2gD\",\"contactsData\":\"ContactsList_contactsData__9FO0i\"};","import {useEffect} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {getContacts} from '../../redux/contacts/contactsSelectors'\r\nimport {getFilter} from '../../redux/filter/filterSelectors'\r\nimport contactsOperations from '../../redux/contacts/contactsOperations'\r\nimport Contact from '../Contact'\r\nimport s from \"./ContactsList.module.css\"\r\n\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch()\r\n  const filter = useSelector(getFilter)\r\n  const contacts = useSelector(getContacts)\r\n\r\n\r\n  useEffect(() => {\r\n      dispatch(contactsOperations.getContacts())\r\n  }, [dispatch, contacts])\r\n\r\n  \r\n\r\n  const filteredContacts = (contacts, filter) => {\r\n    return contacts?.filter(contact => (\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())))\r\n  }\r\n\r\n  const filterContacts = filteredContacts(contacts, filter);\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    {contacts.length > 0 && (\r\n      <ul className={s.contactsList}>\r\n      {filterContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactsElement}>\r\n          <Contact id={id} name={name} number={number}/>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__LyeIl\",\"textField\":\"Filter_textField__1FnkF\"};","import { useDispatch, useSelector } from 'react-redux'\r\nimport {changeFilter} from '../../redux/filter/filterSlice'\r\nimport { TextField } from '@mui/material';\r\nimport s from \"./Filter.module.css\"\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.filter.filter)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <TextField id=\"outlined-basic\" label=\"Поиск по имени\" variant=\"outlined\"\r\n      // <label className={s.label}>\r\n      // Поиск по имени\r\n      // </label>\r\n      // <input\r\n        className={s.textField}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PhonebookView_container__zX2tD\"};","import Form from \"../../components/Form\";\r\nimport Section from \"../../components/Section\";\r\nimport ContactList from \"../../components/ContactsList\";\r\nimport Filter from \"../../components/Filter\";\r\nimport s from './PhonebookView.module.css'\r\n\r\nexport default function Phonebook() {\r\n\r\n    return (\r\n      \r\n    <div className={s.container}>\r\n        <Section title={\"Phonebook\"}>\r\n            <Form />\r\n        </Section>\r\n\r\n        <Section title={\"Contacts\"}> \r\n            <Filter/>\r\n            <ContactList/>\r\n        </Section>\r\n    </div>\r\n)}"],"names":["getContacts","state","contacts","useForm","register","errors","formState","handleSubmit","reset","dispatch","useDispatch","useSelector","handleAddContact","values","find","contact","name","toast","contactsOperations","onSubmit","className","s","TextField","id","label","variant","type","required","pattern","number","Button","title","children","getFilter","filter","onClick","useEffect","filterContacts","toLowerCase","includes","filteredContacts","length","map","value","onChange","e","changeFilter","target","Phonebook"],"sourceRoot":""}